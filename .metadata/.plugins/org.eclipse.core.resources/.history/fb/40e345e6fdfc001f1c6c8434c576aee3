package dao;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;
import model.Dados;

public class DadosDAO {
    private final Connection conexao;

    public DadosDAO(Connection conexao) {
        this.conexao = conexao;
    }

    public void inserir(String nomeCompleto, String endereco, String cep, int idade, String genero) throws SQLException {
        String sql = "CALL inserir_dados(?, ?, ?, ?, ?)";
        try (PreparedStatement stmt = conexao.prepareStatement(sql)) {
            stmt.setString(1, nomeCompleto);
            stmt.setString(2, endereco);
            stmt.setString(3, cep);
            stmt.setInt(4, idade);
            stmt.setString(5, genero);
            stmt.executeUpdate();
        } catch (SQLException e) {
            throw new SQLException("Erro ao inserir dados para " + nomeCompleto, e);
        }
    }

    public void alterar(long matriculaId, String endereco, String cep, int idade, String genero) throws SQLException {
        String sql = "CALL alterar_dados(?, ?, ?, ?, ?)";
        try (PreparedStatement stmt = conexao.prepareStatement(sql)) {
            stmt.setLong(1, matriculaId);
            stmt.setString(2, endereco);
            stmt.setString(3, cep);
            stmt.setInt(4, idade);
            stmt.setString(5, genero);
            stmt.executeUpdate();
        } catch (SQLException e) {
            throw new SQLException("Erro ao alterar dados da matrícula ID: " + matriculaId, e);
        }
    }

    public List<Dados> listarTodos() throws SQLException {
        List<Dados> lista = new ArrayList<>();
        String sql = "SELECT * FROM Dados";

        try (PreparedStatement stmt = conexao.prepareStatement(sql);
             ResultSet rs = stmt.executeQuery()) {
            while (rs.next()) {
                lista.add(new Dados(
                        rs.getLong("id"),
                        rs.getLong("matricula_id"),
                        rs.getString("endereco"),
                        rs.getString("cep"),
                        rs.getString("estado"),
                        rs.getString("cidade"),
                        rs.getInt("idade"),
                        rs.getString("genero")
                ));
            }
        } catch (SQLException e) {
            throw new SQLException("Erro ao listar todos os dados", e);
        }
        return lista;
    }

    public Dados buscarPorId(long matriculaId) throws SQLException {
        String sql = "SELECT * FROM Dados WHERE matricula_id = ?"; // Corrigido para buscar pelo matricula_id
        try (PreparedStatement stmt = conexao.prepareStatement(sql)) {
            stmt.setLong(1, matriculaId);
            try (ResultSet rs = stmt.executeQuery()) {
                if (rs.next()) {
                    return new Dados(
                            rs.getLong("id"),
                            rs.getLong("matricula_id"),
                            rs.getString("endereco"),
                            rs.getString("cep"),
                            rs.getString("estado"),
                            rs.getString("cidade"),
                            rs.getInt("idade"),
                            rs.getString("genero")
                    );
                }
            }
        } catch (SQLException e) {
            throw new SQLException("Erro ao buscar dados pelo ID da matrícula: " + matriculaId, e);
        }
        return null;
    }

    public void excluir(long matriculaId) throws SQLException {
        String sql = "DELETE FROM Dados WHERE matricula_id = ?";
        try (PreparedStatement stmt = conexao.prepareStatement(sql)) {
            stmt.setLong(1, matriculaId);
            int linhasAfetadas = stmt.executeUpdate();
            if (linhasAfetadas == 0) {
                throw new SQLException("Nenhum dado encontrado para a matrícula ID: " + matriculaId);
            }
        } catch (SQLException e) {
            throw new SQLException("Erro ao excluir dados da matrícula ID: " + matriculaId, e);
        }
    }
}